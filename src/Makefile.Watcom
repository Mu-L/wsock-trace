#
# Wsock-trace makefile for Open Watcom.
# G. Vanem <gvanem@yahoo.no> 2011 - 2018.
#
LIB_TARGET = $(%WATCOM)\lib386\nt
BIN_TARGET = $(%WATCOM)\binnt

STACK_OR_REG = r

CC = wcc386

CFLAGS = -bt=nt -mf -w6 -d2 -zq -zc -zm -wx -3$(STACK_OR_REG) -fpi -fr=nul -I. &
         -of+ -s -d2 -hc -DWIN32 -DWIN32_LEAN_AND_MEAN=1 -D_WIN32_WINNT=0x0501

LDFLAGS = option quiet, map, eliminate, caseexact &
          system nt debug all sort global

OBJ_DIR = Watcom_obj

LINK_ARG = $(OBJ_DIR)\wlink.arg

WSOCK_TRACE_OBJS = $(OBJ_DIR)\wsock_trace.obj     &
                   $(OBJ_DIR)\wsock_trace_lua.obj &
                   $(OBJ_DIR)\asn.obj             &
                   $(OBJ_DIR)\hosts.obj           &
                   $(OBJ_DIR)\iana.obj            &
                   $(OBJ_DIR)\idna.obj            &
                   $(OBJ_DIR)\init.obj            &
                   $(OBJ_DIR)\in_addr.obj         &
                   $(OBJ_DIR)\inet_util.obj       &
                   $(OBJ_DIR)\ip2loc.obj          &
                   $(OBJ_DIR)\common.obj          &
                   $(OBJ_DIR)\cpu.obj             &
                   $(OBJ_DIR)\csv.obj             &
                   $(OBJ_DIR)\dnsbl.obj           &
                   $(OBJ_DIR)\dump.obj            &
                   $(OBJ_DIR)\firewall.obj        &
                   $(OBJ_DIR)\geoip.obj           &
                   $(OBJ_DIR)\overlap.obj         &
                   $(OBJ_DIR)\smartlist.obj       &
                   $(OBJ_DIR)\stkwalk.obj

NON_EXPORT_OBJ = $(OBJ_DIR)\non-export.obj

#
# .obj-files for 'ws_tool.exe'.
#
WS_TOOL_OBJ = $(OBJ_DIR)\asn.obj             &
              $(OBJ_DIR)\common.obj          &
              $(OBJ_DIR)\cpu.obj             &
              $(OBJ_DIR)\dump.obj            &
              $(OBJ_DIR)\getopt.obj          &
              $(OBJ_DIR)\hosts.obj           &
              $(OBJ_DIR)\in_addr.obj         &
              $(OBJ_DIR)\init.obj            &
              $(OBJ_DIR)\inet_util.obj       &
              $(OBJ_DIR)\ip2loc.obj          &
              $(OBJ_DIR)\overlap.obj         &
              $(OBJ_DIR)\smartlist.obj       &
              $(OBJ_DIR)\stkwalk.obj         &
              $(OBJ_DIR)\vm_dump.obj         &
              $(OBJ_DIR)\wsock_trace.obj     &
              $(OBJ_DIR)\wsock_trace_lua.obj &
              $(OBJ_DIR)\ws_tool.obj


#
# The 'wsock_trace_ow.lib' is an import-lib for 'wsock_trace_ow.dll'.
# Since the SDK header <ws2ipdef.h> declares some data with no export
# declaration ('in6addr_any' etc.), the non-export.obj is simply added to this
# imp-lib.
#
WSOCK_LIB = wsock_trace_ow.lib
WSOCK_DLL = wsock_trace_ow.dll

TARGETS = $(WSOCK_DLL) $(WSOCK_LIB) # ws_tool.exe

all: $(OBJ_DIR) $(TARGETS) .SYMBOLIC
	@echo Welcome to Wsock-trace library and example.

$(OBJ_DIR):
	md $(OBJ_DIR)

clean: .SYMBOLIC
	- rm -f $(OBJ_DIR)/*.*

vclean realclean: clean .SYMBOLIC
	- rm -f $(TARGETS) wsock_trace_ow.map ws_tool.map
	- rmdir $(OBJ_DIR)

.ERASE
.c{$(OBJ_DIR)}.obj:
	*$(CC) $(CFLAGS) -fo=$@ $[@
	@echo.

$(WSOCK_DLL) $(WSOCK_LIB): $(WSOCK_TRACE_OBJS) $(OBJ_DIR)\wsock_trace.res $(NON_EXPORT_OBJ) $(LINK_ARG)
	wlink system nt dll name $(WSOCK_DLL) @$(LINK_ARG)
	wlib -q -b -c $(WSOCK_LIB) +-$(NON_EXPORT_OBJ)
	@echo.

$(OBJ_DIR)\wsock_trace.res: wsock_trace.rc
	wrc -dDEBUG=0 -D__WATCOMC__ -q -r -zm -fo=$@ $[@
	@echo.

install: $(WSOCK_LIB) $(WSOCK_DLL)
	copy $(WSOCK_LIB) $(LIB_TARGET)
	copy $(WSOCK_DLL) $(BIN_TARGET)

uninstall: .SYMBOLIC
	- rm $(LIB_TARGET)/$(WSOCK_LIB)
	- rm $(BIN_TARGET)/$(WSOCK_DLL)

#
# Fails to link due to some issue with 'ws_tool.obj':
#  Error! E2011: file Watcom_obj\ws_tool.obj(F:\gv\VC_project\ws_trace\src\ws_tool.c): invalid object file attribute
#
ws_tool.exe: $(WS_TOOL_OBJ)
	wlink $(LDFLAGS) name $@ file { $(WS_TOOL_OBJ) } library { clib3$(STACK_OR_REG).lib dnsapi.lib advapi32.lib ole32.lib winmm.lib }
	@echo.

$(LINK_ARG): $(__MAKEFILES__)
	%create $^@
	@%append $^@ option implib=$(WSOCK_LIB), map, verbose, quiet,
	@%append $^@ caseexact, map=$(WSOCK_DLL:.dll=.map), res=$(OBJ_DIR)\wsock_trace.res
	@%append $^@ file { $(WSOCK_TRACE_OBJS) } library clib3$(STACK_OR_REG).lib
	@echo.


#
# Dependencies based on "gcc -MM .."
#
$(OBJ_DIR)\asn.obj:         asn.c common.h csv.h smartlist.h inet_util.h in_addr.h init.h iana.h asn.h
$(OBJ_DIR)\common.obj:      common.c common.h smartlist.h init.h dump.h wsock_trace.rc
$(OBJ_DIR)\cpu.obj:         cpu.c common.h init.h cpu.h
$(OBJ_DIR)\dump.obj:        dump.c common.h in_addr.h init.h geoip.h smartlist.h &
                            idna.h inet_util.h hosts.h wsock_trace.h dnsbl.h dump.h
$(OBJ_DIR)\dnsbl.obj:       dnsbl.c dnsbl.h common.h init.h inet_util.h in_addr.h smartlist.h wsock_defs.h
$(OBJ_DIR)\hosts.obj:       hosts.c common.h init.h smartlist.h in_addr.h hosts.h
$(OBJ_DIR)\geoip.obj:       geoip.c common.h inet_util.h smartlist.h init.h in_addr.h geoip.h
$(OBJ_DIR)\iana.obj:        iana.c common.h init.h inet_util.h in_addr.h smartlist.h asn.h iana.h
$(OBJ_DIR)\idna.obj:        idna.c common.h init.h smartlist.h idna.h
$(OBJ_DIR)\inet_util.obj:   inet_util.c inet_util.h common.h init.h in_addr.h wsock_defs.h
$(OBJ_DIR)\init.obj:        init.c common.h wsock_trace.h wsock_trace_lua.h &
                            dnsbl.h dump.h geoip.h smartlist.h idna.h stkwalk.h &
                            overlap.h hosts.h cpu.h init.h
$(OBJ_DIR)\in_addr.obj:     in_addr.c common.h in_addr.h
$(OBJ_DIR)\overlap.obj:     overlap.c common.h init.h smartlist.h overlap.h
$(OBJ_DIR)\smartlist.obj:   smartlist.c common.h vm_dump.h smartlist.h
$(OBJ_DIR)\stkwalk.obj:     stkwalk.c common.h init.h stkwalk.h smartlist.h
$(OBJ_DIR)\vm_dump.obj:     vm_dump.c common.h cpu.h vm_dump.h
$(OBJ_DIR)\wsock_trace.obj: wsock_trace.c common.h in_addr.h &
                            init.h cpu.h stkwalk.h smartlist.h &
                            overlap.h dump.h wsock_trace_lua.h &
                            wsock_trace.h wsock_hooks.c
$(OBJ_DIR)\ws_tool.obj:     csv.c backtrace.c geoip.c iana.c firewall.c dnsbl.c idna.c
$(OBJ_DIR)\ip2loc.obj:      ip2loc.c common.h init.h geoip.h smartlist.h in_addr.h

